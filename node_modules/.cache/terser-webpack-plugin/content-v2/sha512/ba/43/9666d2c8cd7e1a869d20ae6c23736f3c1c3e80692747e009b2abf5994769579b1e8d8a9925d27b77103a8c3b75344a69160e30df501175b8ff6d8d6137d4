{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{433:function(t,s,a){\"use strict\";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"p\",[t._v(\"爬虫分为四个步骤，首先获取数据，然后解析数据，再提取数据，最后是存储数据\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://raw.githubusercontent.com/AthleticsNero/AthleticsNero.github.io/master/2019/01/18/pythonnote2/pic1.png\",alt:\"\"}})]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" requests \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#首先引入requests库\")]),t._v(\"\\nres\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"requests\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"get\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'URL'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#向服务器发送了一个请求,把服务器响应结果赋给res，为response对象\")]),t._v(\"\\nres\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'gbk'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#定义response对象的编码，一般会自己判断不必写，如果错误则补上正确的码表\")]),t._v(\"\\npic\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"res\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"content \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#获取二进制数据\")]),t._v(\"\\nnote\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"res\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"text \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#获取字符串数据\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"res\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"status_code\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"检查是否请求成功，成功则为\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"200\")]),t._v(\"\\nk\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'note.txt'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'a+'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#将res.text内容写在note.txt文件末尾\")]),t._v(\"\\nm\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'pic.jpg'\")]),t._v(\"或\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'music.mp3'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'wb'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#以二进制形式生成图片或音频\")]),t._v(\"\\nk\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"write\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"pic\\\\note\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nk\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"close\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#基本文件读写操作\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"以上是一般的获取数据的方法，接下来是用 BeautifulSoup 解析数据，从源码入手爬取数据。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" requests\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" bs4 \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" BeautifulSoup \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#引入bs库\")]),t._v(\"\\nres\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"requests\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"get\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'URL'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nsoup\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"BeautifulSoup\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'字符串数据,可以是res.text'\")]),t._v(\"，\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'html.parser'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#解析数据，html.parser是解析器\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"beautifulsoup 提取数据的两个方法：\")]),t._v(\" \"),a(\"p\",[t._v(\"find()和 find_all(),find()找到满足条件的首个数据，参数可以是标签和属性，find_all 则是所有符合的数据，生成的自然是一个列表\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"属性如果是 class，则要在 class 后面加个_防止被编译器识别为关键字。\")])]),t._v(\" \"),a(\"p\",[t._v(\"Tag 对象，提取出的单个数据的类是 Tag，其主要用法有三种：\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"tag.find()用来提取 tag 中的 tag，由父级标签提取子级标签\")]),t._v(\" \"),a(\"li\",[t._v(\"tag.text 提取 tag 中的文字，可以忽略标签信息\")]),t._v(\" \"),a(\"li\",[t._v(\"tag['属性名']提取 tag 中这个属性的值，不过只能仅限这个 tag 的标签，不包含内部标签\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}